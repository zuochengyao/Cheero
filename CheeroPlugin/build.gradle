if (isLibrary) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'com.tencent.tinker.patch'

android {
    compileSdkVersion versions.build.compile_sdk

    defaultConfig {
        if (!isLibrary) {
            applicationId "com.icheero.plugin"
        }
        minSdkVersion versions.build.min_sdk
        targetSdkVersion versions.build.target_sdk
        versionCode versions.build.code
        versionName versions.build.name
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }

    if (!isLibrary) {
        signingConfigs {
            release {
                keyAlias versions.sign.release.alias
                keyPassword versions.sign.release.password
                storeFile file(versions.sign.release.filepath)
                storePassword versions.sign.release.store
            }
            debug {
                keyAlias versions.sign.debug.alias
                keyPassword versions.sign.debug.password
                storeFile file(versions.sign.debug.filepath)
                storePassword versions.sign.debug.store
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isLibrary) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'module/**'
                }
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
                java {
                    exclude 'com.icheero.plugin.application/**'
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility versions.build.java
        targetCompatibility versions.build.java
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':CheeroSDK')
    annotationProcessor versions.deps.arouter_compiler
    // Alibaba Andfix
    implementation versions.deps.andfix
    // Tencent Tinker
    // 生成Application时使用
    compileOnly versions.deps.tinker.anno
    // 核心sdk库
    implementation versions.deps.tinker.lib
}
