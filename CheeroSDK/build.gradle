apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.build.compile_sdk
    buildToolsVersion versions.build.build_tool

    defaultConfig {
        minSdkVersion versions.build.min_sdk
        targetSdkVersion versions.build.target_sdk
        versionCode versions.build.code
        versionName versions.build.name
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11", "-frtti", "-fexceptions"
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
            sourceSets.main {
                jniLibs.srcDirs = ['libs']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }

    // useLibrary 'org.apache.http.legacy'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    // Support libraries
    api versions.deps.support.design
    api versions.deps.support.v4
    api versions.deps.support.v7
    api versions.deps.support.constraint
    // RxJava and retrofit
    api versions.deps.rxjava2
    api versions.deps.rxandroid
    api versions.deps.retrofit.runtime
    api versions.deps.retrofit.adapter
    api versions.deps.retrofit.converter_gson
    api versions.deps.retrofit.gson
    // Okhttp
    api versions.deps.okio
    api versions.deps.okhttp
    // Alibaba ARouter
    api versions.deps.arouter_api
    // Alibaba Andfix
    api versions.deps.andfix
    // other
}
